name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-test:
    name: Build & Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1
        with:
          cmake-version: '3.22.0'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache CMake build
        uses: actions/cache@v4
        with:
          path: |
            build/
            ~/.cache/
          key: ${{ runner.os }}-cmake-${{ hashFiles('**/CMakeLists.txt') }}

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y llvm-dev libzstd-dev libxml2-dev zlib1g-dev

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install llvm zstd libxml2 cmake

      - name: Configure CMake
        run: |
          mkdir -p build
          cd build
          cmake .. -DWITH_PYTHON=ON -DWITH_V8=ON -DWITH_ZSTD=ON -DWITH_XML=ON -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: |
          cd build
          cmake --build . --config Release

      - name: Run tests
        run: |
          cd build
          if [ -f ../tocin-compiler/tests/test_stdlib_string.to ]; then
            for f in ../tocin-compiler/tests/*.to; do
              echo "Running test: $f"
              ./tocin $f || exit 1
            done
          fi
        shell: bash

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: build/

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}
          path: build/test-results/

      - name: Job summary
        run: echo "Build and tests completed for ${{ matrix.os }}. See artifacts for details." 