// Test file for traits and trait bounds in Tocin

// Define a trait
trait Printable {
    fn print(self);
}

// Implement the trait for a struct
struct Point { x: int, y: int }
impl Printable for Point {
    fn print(self) {
        print("Point(" + self.x + ", " + self.y + ")");
    }
}

// Use the trait
let p = Point { x: 1, y: 2 };
p.print();

// Negative test: missing method implementation
trait IncompleteTrait { fn foo(self); fn bar(self); }
struct Dummy {}
// impl IncompleteTrait for Dummy { fn foo(self) {} } // Should error: missing bar

// Trait bounds in generics
fn print_all<T: Printable>(items: list<T>) {
    for item in items { item.print(); }
}

let points = [Point { x: 3, y: 4 }, Point { x: 5, y: 6 }];
print_all(points); 