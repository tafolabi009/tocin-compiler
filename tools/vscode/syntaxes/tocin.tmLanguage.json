{
  "scopeName": "source.tocin",
  "name": "Tocin",
  "patterns": [
    { "include": "#keywords" },
    { "include": "#types" },
    { "include": "#comments" },
    { "include": "#strings" },
    { "include": "#numbers" },
    { "include": "#functions" },
    { "include": "#operators" }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.tocin",
          "match": "\\b(fn|let|const|if|else|while|for|return|struct|trait|impl|async|await|match|go|channel|select|defer|import|export)\\b"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "support.type.tocin",
          "match": "\\b(int|float|bool|string|void|any|Option|Result|Array|Map|Set)\\b"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.tocin",
          "begin": "//",
          "beginCaptures": { "0": { "name": "punctuation.definition.comment.tocin" } },
          "end": "\\n",
          "patterns": []
        },
        {
          "name": "comment.block.tocin",
          "begin": "/\\*",
          "beginCaptures": { "0": { "name": "punctuation.definition.comment.tocin" } },
          "end": "\\*/",
          "endCaptures": { "0": { "name": "punctuation.definition.comment.tocin" } },
          "patterns": []
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.tocin",
          "begin": '"',
          "end": '"',
          "patterns": [
            { "name": "constant.character.escape.tocin", "match": "\\\\." }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.tocin",
          "match": "\\b\\d+(\\.\\d+)?([eE][+-]?\\d+)?\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.tocin",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*(?=\\s*\\()"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.tocin",
          "match": "[+\\-*/%=<>!&|^~?:]+"
        }
      ]
    }
  }
} 